@model ToDo.Net.Models.ToDoList

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="panel panel-default">
            <div class="panel-heading panel-heading-custom"><h4>Edit Task </h4></div>

            <div class="panel-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.Task, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div id="TaskName" class="col-md-10">
                        @Html.TextArea("Task", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Task, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TaskPriority, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.TaskPriority, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TaskPriority, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateCompleted, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateCompleted, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DaysToComplete, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DaysToComplete,new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DaysToComplete, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button id="btnSave" type="submit" value="Save" class="btn btn-success"><i class="far fa-save"></i> Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />

<div>
    <a href="@Url.Action("Index","ToDoLists")" class="btn btn-primary btn-lg">
        <span class="fas fa-angle-double-left" aria-hidden="true"></span>
        Back To Tasks
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
